%a{:id => "entry_marker_#{entry.id}"}
.entry{:class => "#{entry.content_type_name}#{' has_collections' if entry.collections}", :id => "entry_#{entry.id}"}
  / label
  %ul.type
    %li.label
      %span
        =entry.content_type_name

  / content + meta    
  .content
    .body
      =render :partial => "entries/#{entry.content_type_name}/show", :locals => {"#{entry.content_type_name}".to_sym => entry.content, :context => context}
    .workspaces.hide
    .meta
      -unless params[:project_id] || @project
        %span.project
          =link_to entry.project.name, project_path(entry.project)
          \-
      %span.comments
        0 Comments
      %span.actions{:class => "#{'hide' if !created_by_current_user?(entry) && standalone}"}
        \-
        -if created_by_current_user?(entry)
          =link_to_remote image_tag("trash_icon.gif"), :url => project_entry_path(entry.project, entry, :context => "#{standalone ? 'entry' : 'project'}"), :method => :delete, :confirm => "Are you sure?"
          |
          =link_to_remote "Edit", :url => edit_project_entry_path(entry.project, entry, :content_type => entry.content_type_name, :context => context), :method => :get
          = "|" if !standalone
        =link_to "Open", project_entry_path(entry.project, entry) unless standalone

  / actionable links + etc
  .options
    .group.user
      From
      %strong=entry.by_line(current_user)
    .group.created
      ="#{time_ago_in_words(entry.created_at)} ago"

